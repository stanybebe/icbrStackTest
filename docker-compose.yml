version: '3.8'

services:
  db:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - app-network

  backend:
    build:
       context: ./backend
       dockerfile: myproject/Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend/myproject:/myproject
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend/frontendtest 
    volumes:
      - ./frontend/frontendtest:/app
    ports:
      - "3000:3000"
    stdin_open: true
    tty: true
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
